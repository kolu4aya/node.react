{"ast":null,"code":"var _jsxFileName = \"D:\\\\OSPanel\\\\domains\\\\node.react1\\\\frontend\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  [name, setName] = useState(\"\");\n  const changeName = () => {\n    setName(\"Петр\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: changeName,\n    children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"zh+HvXX3zxuqMkvNfneES9FE1vU=\");\n_c = App;\nconst ViewName = () => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Name\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n_c2 = ViewName;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this), /*#__PURE__*/_jsxDEV(ViewName, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ViewName\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","App","_s","name","setName","changeName","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ViewName","_c2","render","document","getElementById","$RefreshReg$"],"sources":["D:/OSPanel/domains/node.react1/frontend/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nconst App = () => {\n  [name, setName] = useState(\"\")\n\n  const changeName = () => {\n    setName(\"Петр\")\n  }\n\n  return <button onClick={changeName}>Изменить</button>\n}\n\nconst ViewName = () => {\n  return <h1>Name</h1>\n}\n\nReactDOM.render(\n  <App />,\n  <ViewName />,\n  document.getElementById('root')\n)"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9B,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBD,OAAO,CAAC,MAAM,CAAC;EACjB,CAAC;EAED,oBAAOJ,OAAA;IAAQM,OAAO,EAAED,UAAW;IAAAE,QAAA,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACvD,CAAC;AAAAT,EAAA,CARKD,GAAG;AAAAW,EAAA,GAAHX,GAAG;AAUT,MAAMY,QAAQ,GAAGA,CAAA,KAAM;EACrB,oBAAOb,OAAA;IAAAO,QAAA,EAAI;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACtB,CAAC;AAAAG,GAAA,GAFKD,QAAQ;AAIdf,QAAQ,CAACiB,MAAM,eACbf,OAAA,CAACC,GAAG;EAAAO,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,eACPX,OAAA,CAACa,QAAQ;EAAAL,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EACZK,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AAAA,IAAAL,EAAA,EAAAE,GAAA;AAAAI,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAJ,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}