{"ast":null,"code":"var _jsxFileName = \"D:\\\\OSPanel\\\\domains\\\\node.react1\\\\frontend\\\\src\\\\components\\\\reg.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Reg() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState();\n  const [isFilePicked, setIsFilePicked] = useState(false);\n  const changeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n    event.target.files[0] && setIsFilePicked(true);\n  };\n  function add() {\n    console.log(selectedFile);\n    // HANDLING FILE AS SENDING FILE INTO BACKEND\n    if (!isFilePicked) return;\n    const formData = new FormData();\n    // formData.append(\"File\", selectedFile);\n    // ALSO ADD RANDOM VALUE IF YOU WANT LIKE STRING , OBJECT OR      ARRAY\n    formData.append(\"user\", {\n      \"email\": \"user31@mail.ru\",\n      \"password\": \"123455\"\n    });\n    fetch('http://localhost:5000/api/registration', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(res => res.text()).then(res => {\n      console.log(res);\n      let newJson = res.replace(/([a-zA-Z0-9]+?):/g, '\"$1\":');\n      newJson = newJson.replace(/'/g, '\"');\n      console.log(JSON.parse(newJson));\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"items\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"avatar\",\n      onChange: changeHandler,\n      type: \"file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add,\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this);\n}\n_s(Reg, \"83sVkC/BoXCMRBY8pZY7nS9G3S0=\");\n_c = Reg;\nexport default Reg;\nvar _c;\n$RefreshReg$(_c, \"Reg\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Reg","_s","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","changeHandler","event","target","files","add","console","log","formData","FormData","append","fetch","method","headers","body","JSON","stringify","then","res","text","newJson","replace","parse","className","children","name","onChange","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/OSPanel/domains/node.react1/frontend/src/components/reg.js"],"sourcesContent":["import {useState, useEffect} from 'react'\r\n\r\nfunction Reg() {\r\n    const [selectedFile, setSelectedFile] = useState();\r\n        const [isFilePicked, setIsFilePicked] = useState(false);\r\n        const changeHandler = (event) => {\r\n         setSelectedFile(event.target.files[0]);\r\n         event.target.files[0] && setIsFilePicked(true);\r\n        };\r\n\r\n   function add() {\r\n        console.log(selectedFile)\r\n            // HANDLING FILE AS SENDING FILE INTO BACKEND\r\n            if (!isFilePicked) return;\r\n            const formData = new FormData();\r\n            // formData.append(\"File\", selectedFile);\r\n             // ALSO ADD RANDOM VALUE IF YOU WANT LIKE STRING , OBJECT OR      ARRAY\r\n            formData.append(\"user\", {\r\n             \"email\" : \"user31@mail.ru\",\r\n            \"password\": \"123455\"\r\n           });\r\n        fetch('http://localhost:5000/api/registration', {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n              }, \r\n            body:JSON.stringify(formData)\r\n        })\r\n        .then((res) => res.text())\r\n        .then((res) => {\r\n            console.log(res)\r\n            let newJson = res.replace(/([a-zA-Z0-9]+?):/g, '\"$1\":');\r\n                newJson = newJson.replace(/'/g, '\"');\r\n            console.log(JSON.parse(newJson))\r\n        }\r\n         )\r\n\r\n        }\r\n        return (\r\n            <div className=\"items\">\r\n\r\n\r\n\r\n                <input name=\"avatar\" onChange={changeHandler} type=\"file\" />\r\n                <button onClick={add}>\r\n                    Добавить\r\n                </button>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Reg"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAC9C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMU,aAAa,GAAIC,KAAK,IAAK;IAChCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACtCF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,IAAIJ,eAAe,CAAC,IAAI,CAAC;EAC/C,CAAC;EAEN,SAASK,GAAGA,CAAA,EAAG;IACVC,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC;IACrB;IACA,IAAI,CAACE,YAAY,EAAE;IACnB,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/B;IACC;IACDD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE;MACvB,OAAO,EAAG,gBAAgB;MAC3B,UAAU,EAAE;IACb,CAAC,CAAC;IACLC,KAAK,CAAC,wCAAwC,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MAClB,CAAC;MACHC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACR,QAAQ;IAChC,CAAC,CAAC,CACDS,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEC,GAAG,IAAK;MACXZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;MAChB,IAAIE,OAAO,GAAGF,GAAG,CAACG,OAAO,CAAC,mBAAmB,EAAE,OAAO,CAAC;MACnDD,OAAO,GAAGA,OAAO,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;MACxCf,OAAO,CAACC,GAAG,CAACQ,IAAI,CAACO,KAAK,CAACF,OAAO,CAAC,CAAC;IACpC,CACC,CAAC;EAEF;EACA,oBACI1B,OAAA;IAAK6B,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAIlB9B,OAAA;MAAO+B,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAEzB,aAAc;MAAC0B,IAAI,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5DrC,OAAA;MAAQsC,OAAO,EAAE3B,GAAI;MAAAmB,QAAA,EAAC;IAEtB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAElB;AAACnC,EAAA,CA/CQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAiDZ,eAAeA,GAAG;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}